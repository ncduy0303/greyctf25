"use strict";
/**
 * A safe-by-default wrapper around the `fs` module.
 *
 * @packageDocumentation
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("node:fs"));
const getter_1 = require("./getter");
/**
 * Creates a safe-by-default version of the Node.js `fs` module.
 *
 * @public
 * @param basePath - The base path to use for all file system operations.
 * @returns
 * A safe version of the Node.js `fs` module, guarded against path traversal
 * attacks and absolute path usage.
 *
 * All interfaces are exactly the same as the original `fs` module,
 * but all file paths are resolved relative to the provided `basePath`
 * and are guaranteed to fall within the `basePath` when the `fs`
 * operations are executed.
 *
 * The use of file descriptors in place of a file path is not affected.
 */
const safeFs = (basePath = process.cwd()) => {
    return new Proxy(fs, {
        get: (0, getter_1.createGetter)(basePath),
    });
};
exports.default = safeFs;
//# sourceMappingURL=index.js.map